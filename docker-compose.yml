version: "3.8"

volumes:
  media_vol:
  static_vol:
  uwsgi_vol:


networks:
  frontend_network:
  db_network:
  nginx_network:


services:

  db:
    image: postgres
    volumes:
      - ./db:/var/lib/postgresql/data
    env_file:
      - ./.env
    networks:
      - db_network

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   ports:
  #     - 8881:3000
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true
  #   networks:
  #     - frontend_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/backend
      - uwsgi_vol:/uwsgi/
    expose:
      - 8000
    ports:
      - 8881:8000
    env_file:
      - ./.env
    networks:
      - nginx_network
      - frontend_network
      - db_network
    depends_on:
      - db
    tty: true
    stdin_open: true

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - 8880:80
    expose:
      - 80
    volumes:
      - uwsgi_vol:/uwsgi/
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./nginx/ssl:/nginx/ssl
      - ./nginx/log:/var/log/nginx
      - static_vol:/nginx/html/static
      - media_vol:/nginx/html/media
    networks:
      - nginx_network
    restart: always
    depends_on:
      - backend
